

The concept for this service is here, in code, at this point I'd like to turn
it over to the community.

The license is the following conversation with Matt Murphy.


<pre>
  Scott Fryxell: Can you help me publish the code
                 I wrote for dirtywhitecouch.com
                 to the community?

  Matt Murphy: Sure what do you have in mind?

  Scott Fryxell: Totally open. No license.

  Matt Murphy: Yeah, I think that's essentially the MIT license

  Scott Fryxell: So, how's that different then the creative commons?

  Matt Murphy: I think creative commons restricts taking profit
               from the work not sure though.

  Matt Murphy: Maybe they are the same.

  Scott Fryxell: Neither am I. And I wouldn't want that restriction.

  Matt Murphy: Maybe the MIT license restricts that derived works have
               to be MIT licensed not sure.

  Scott Fryxell: If some other hippy wants to try and do this,
                 and make money, he should.

  Matt Murphy: :)
</pre>

Changes I would make to the codebase include the following:
- I would remove the Janrain integration in favor of OmniAuth. there's a non
  obvious reason why they have made their service lame. since plugging there shit
  in the integration tests have been failing. and i'm too lazy to come up for a
  solution for them. if i gotta write code to work with your service it better
  be free.

- I would like to see Locator renamed to url. While locator may be more
  semantically correct it confuses the relational algebra something fierce.

- I would  re-factor TipBundle, and RoyaltyBundle into an Order object.
  which holds the list of tips (LineItem is an unnecessary abstraction here, as the
  service  offers only a single product - the tip).

- Site and Page seem superfluous to me as well. if they exist at all they
  should be a subclass of URL. but even that introduces ambiguity into the
  purpose of this service.

The service is a complete concept in that it can tip a url for a fan. And
while there is some infrastructure for paying a publisher. there is less
developed here then a production ready application would need.

The workflow for paying a publisher is imagined to be the following:

- A fan tips a URL. At some point, after the tip occurs, the service bills the
  fan for a set of tips they have made. The service get's paid by the fan.
  Paid Tips are allocated to publishers. Publishers claim tips by giving the
  service their bank routing and account number, The service will make publicly
  available the tip for the url, who owns it currently, and any other
  information the publisher makes available (facebook,
  twitter, openId providers of all colors and stripes). basicly, people should
  be able to know the mother fucker their tipping. the more directly the better.

  The service pays publishers for any URL that contains their user_id.

  <link type="publisher" id="http://dirtywhitecouch.com/user/:user_id" />

  Every time a URL is tipped the service makes a HEAD request of the tipped URL looking
  for the owner. When one is found the publisher is paid the tip, if no publisher
  is found the money sit's, ever so lonely, in an account waiting for the publisher
  to come rescue it.


Also, there are about a billion ways this service can be used to help
a fan to discover and remember the content on the web they have enjoyed. It will
be fun to watch nerds explore what those are.

I'd like to thank and misspell: Jarrod Roland, Adrianna Gordon, Rob Prideaux,
My Sister Emily, one of the finest men I know, her husband Erick.  Dana Yobst,
Phil Mueller, Forrest Norvell, Tara Barnes, Jen Gillis, Erin Ury, David Kazperzak,
Ben Quinois, Rob Lord, Alan Eyzaguire, Michael Cerda, kim pierce, Sarah Million,
Jeremy Rosenblaum, Zack Shepard, Greer McGentric. Dave, Liz and Odessa.

This project is dedicated to Robert Cook. It is hard to explain the
gratitude I feel for the example you have been for me.

Scott Fryxell
scott@fasterlighterbetter.com
2011.03.10